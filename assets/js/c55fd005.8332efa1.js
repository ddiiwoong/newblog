"use strict";(self.webpackChunkddii=self.webpackChunkddii||[]).push([[6596],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),o=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=o(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=o(n),d=a,g=m["".concat(c,".").concat(d)]||m[d]||p[d]||s;return n?r.createElement(g,i(i({ref:t},u),{},{components:n})):r.createElement(g,i({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,i=new Array(s);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var o=2;o<s;o++)i[o]=n[o];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},86651:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return l},metadata:function(){return o},toc:function(){return p}});var r=n(87462),a=n(63366),s=(n(67294),n(3905)),i=["components"],l={layout:"single",title:"Cert-manager",comments:!0,classes:"wide",description:"Cert-manager\uc5d0 \ub300\ud574 \uc54c\uc544\ubd05\ub2c8\ub2e4",categories:["Kubernetes"],tags:["Cert-manager","Kubernetes","TLS","Manage TLS Certificates","Security","HTTPS"]},c=void 0,o={permalink:"/2018/07/13/cert-manager",editUrl:"https://github.com/ddiiwoong/newblog/tree/main/blog/2018-07-13-cert-manager.md",source:"@site/blog/2018-07-13-cert-manager.md",title:"Cert-manager",description:"Cert-manager\uc5d0 \ub300\ud574 \uc54c\uc544\ubd05\ub2c8\ub2e4",date:"2018-07-13T00:00:00.000Z",formattedDate:"July 13, 2018",tags:[{label:"Cert-manager",permalink:"/tags/cert-manager"},{label:"Kubernetes",permalink:"/tags/kubernetes"},{label:"TLS",permalink:"/tags/tls"},{label:"Manage TLS Certificates",permalink:"/tags/manage-tls-certificates"},{label:"Security",permalink:"/tags/security"},{label:"HTTPS",permalink:"/tags/https"}],readingTime:8.14,truncated:!1,authors:[],frontMatter:{layout:"single",title:"Cert-manager",comments:!0,classes:"wide",description:"Cert-manager\uc5d0 \ub300\ud574 \uc54c\uc544\ubd05\ub2c8\ub2e4",categories:["Kubernetes"],tags:["Cert-manager","Kubernetes","TLS","Manage TLS Certificates","Security","HTTPS"]},prevItem:{title:"Dex",permalink:"/2018/07/26/dex"},nextItem:{title:"Operators & CRDs(CustomResourceDefinitions) on Kubernetes",permalink:"/2018/07/09/operator"}},u={authorsImageUrls:[]},p=[{value:"TLS \uc778\uc99d\uc11c",id:"tls-\uc778\uc99d\uc11c",level:2},{value:"Cert-manager",id:"cert-manager",level:3},{value:"\uad6c\uc131",id:"\uad6c\uc131",level:3},{value:"\uc0ac\uc804\uc900\ube44\uc0ac\ud56d",id:"\uc0ac\uc804\uc900\ube44\uc0ac\ud56d",level:3},{value:"\uc124\uce58",id:"\uc124\uce58",level:3},{value:"\uc778\uc99d\uc11c \uc124\uc815 \ubc0f \ubc30\ud3ec",id:"\uc778\uc99d\uc11c-\uc124\uc815-\ubc0f-\ubc30\ud3ec",level:3},{value:"TLS \uc778\uc99d\uc11c \ubc1c\uae09",id:"tls-\uc778\uc99d\uc11c-\ubc1c\uae09",level:3},{value:"\uc815\ub9ac",id:"\uc815\ub9ac",level:2}],m={toc:p};function d(e){var t=e.components,l=(0,a.Z)(e,i);return(0,s.kt)("wrapper",(0,r.Z)({},m,l,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"tls-\uc778\uc99d\uc11c"},"TLS \uc778\uc99d\uc11c"),(0,s.kt)("p",null,"\uc81c\ud55c\ub41c \uc608\uc0b0\uacfc \uc2dc\uac04, \uc778\ub825\uc73c\ub85c \uc11c\ube44\uc2a4\ub97c \ub9cc\ub4e4\ub2e4 \ubcf4\ub2c8 \uc5b4\ub824\uc6b4 \uc810\ub4e4\uc774 \ucc38 \ub9ce\ub2e4. \ud2b9\ud788\ub098 TLS \uc778\uc99d\uc11c \uac19\uc740 \uacbd\uc6b0 \uad00\ub9ac\ud558\ub294\uac83\uc774 \uc740\uadfc\ud788 \uadc0\ucc2e\ub2e4. \uc778\uc99d\uc11c \ub9cc\ub8cc\uc77c \uad00\ub9ac\ud558\ub294\uac83 \ubd80\ud130 \uc5b4\ub290 \ud398\uc774\uc9c0\uae4c\uc9c0\ub97c \ud3c9\ubb38\uc73c\ub85c\ub9cc \ub450\uc5b4\uc57c \ud558\ub294\uc9c0\ub3c4... \uadf8\ub7f0\ub370 \ubc14\ubcf4\uac19\uc740 \uc774\uc288\ub97c \uc800\uc9c0\ub974\uace0 \ub9d0\uc558\ub2e4. \ub3c4\uba54\uc778\uc744 \uc2e0\uccad\ud558\uace0 fanout, Name based virtual hosting \ubc29\uc2dd\uc911\uc5d0 \uace0\ubbfc\ud558\ub2e4\uac00 \uc124\uacc4\ub97c virtual host\ub85c \ud558\uc600\ub2e4.  "),(0,s.kt)("p",null,"\uadf8\ub7f0\ub370 \ubb38\uc81c\ub294 \uc5b4\uc774\uc5c6\ub294\uacf3\uc5d0\uc11c \ub098\uc654\ub2e4. *.xxxxx.io \ub77c\uace0 wildcard SSL \uc778\uc99d\uc11c\ub97c \uc2e0\uccad\ud558\uc600\ub294\ub370 virtual host\ubc29\uc2dd\uc73c\ub85c 2\ucc28 subdomin (\uc608, api.stg.xxxxx.io)\uc73c\ub85c ingress\ub97c \ub9c8\uad6c\uc7a1\uc774\ub85c \uc0dd\uc131\ud558\uace0 \uc778\uc99d\uc11c\ub97c \uc801\uc6a9\uc744 \ud588\ub2e4. \ud558\uc9c0\ub9cc \uc778\uc99d\uc11c \uc624\ub958 \u314b\u314b"),(0,s.kt)("p",null,"\uc778\ud130\ub137 \ube44\uc9c0\ub2c8\uc2a4\ub97c \uac70\uc758 \ud574\ubcf4\uc9c0 \uc54a\uc544\uc11c \uc778\uc9c0, \uc774\ub7f0 \uae30\ubcf8\uc801\uc778 \ub0b4\uc6a9\ub3c4 \uac04\uacfc\ud558\uace0 \uc11c\ube44\uc2a4\ub97c \uad6c\uc0c1\ud55c \ub0b4\uac00 \ubaa8\ub4e0\uac78 \ucc45\uc784\uc838\uc57c\ud558\ub294 \uc0c1\ud669\uc774 \uc640\ubc84\ub838\ub2e4. "),(0,s.kt)("p",null,"\uc124\uacc4\ub97c \uc774\uc0c1\ud558\uac8c \ud574\uc11c wildcard \ub3c4\uba54\uc778\uc744 \uba87\uc2ed\uac1c\ub97c \uc2e0\uaddc\ub85c \uacc4\uc57d\ud574\uc57c\ud558\ub294 \uc4f8\ub370\uc5c6\ub294 \ube44\uc6a9\uc744 \ub4e4\uc5b4\uc57c\ud558\ub294 \ucc98\uc9c0\uac00 \ub418\uc5c8\ub2e4. \ud558\uc9c0\ub9cc \uadf8\ub0e5 \uc8fd\uc73c\ub780 \ubc95\uc740 \uc5c6\ub294\uac8c \uc0ac\ub78c\uc0ac\ub294 \uc138\uc0c1\uc774\uace0 \uc774\ub7f0 \uace0\ubbfc\ub4e4\uc744 \ubd84\uba85 \ub2e4\ub978\uc0ac\ub78c\ub4e4\ub3c4 \ud588\uc744\uac70\uc57c\ub77c\uace0 \uc0dd\uac01\ud558\uba74\uc11c \ub5a0\uc624\ub978\uac8c let's encrypt \uc600\uace0 \ucc3e\uc544\ubcf4\ub2c8 \uc774\uac78 \ub610 kubernetes\uc5d0\uc11c \ubc1c\uae09\ubd80\ud130 \uac31\uc2e0\uae4c\uc9c0 \ud574\uc8fc\ub294 \uc624\ud508\uc18c\uc2a4\ub97c \ucc3e\uc544 \uc801\uc6a9\uae4c\uc9c0 \ud558\uace0 \uc774\ub807\uac8c \ud3ec\uc2a4\ud305\uc744 \ud55c\ub2e4. "),(0,s.kt)("h3",{id:"cert-manager"},"Cert-manager"),(0,s.kt)("p",null,"\uc778\uc99d\uc11c \uc5c6\uc774 \uad6c\uc131\ud560\uc218\ub3c4 \uc788\uc9c0\ub9cc \uae30\ubcf8\uc801\uc73c\ub85c kubernetes \ub294 secret\uacfc ingress\uc758 \uac04\ub2e8\ud55c \uc124\uc815\ub9cc\uc73c\ub85c TLS\ub97c \uad6c\uc131\ud560 \uc218 \uc788\ub2e4.  "),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Cert-manager : K8s \ud074\ub7ec\uc2a4\ud130\ub0b4\uc5d0\uc11c TLS\uc778\uc99d\uc11c\ub97c \uc790\ub3d9\uc73c\ub85c \ud504\ub85c\ube44\uc800\ub2dd \ubc0f \uad00\ub9ac\ud558\ub294 \uc624\ud508\uc18c\uc2a4"),(0,s.kt)("li",{parentName:"ul"},"Let\u2019s Encrypt :  \uc790\uc728\uc801\uc73c\ub85c \uc791\ub3d9\ud558\ub294 \uac1c\ubc29\ub41c CA(Certificate authority-\uc778\uc99d\uae30\uad00)\uc73c\ub85c \uacf5\uacf5\uc131(\uacf5\uacf5\uc758 \uc774\uc775)\uc744 \uc704\ud574\uc11c \uc6b4\uc601\ub418\ub294 \uc624\ud508\uc18c\uc2a4")),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"http://docs.cert-manager.io/en/latest/"},"Cert-manager"),"\ub294 AWS\uc758 Certificate Manager\uc640 \uc720\uc0ac\ud558\uac8c \uc778\uc99d\uc11c\ub97c \ubc1c\uae09\ud558\uace0 \uc124\uc815\ud560\uc218 \uc788\ub2e4. 3\uac1c\uc6d4 \uc720\ud6a8\uae30\uac04\uc744 \uac00\uc9c0\ub294 ",(0,s.kt)("a",{parentName:"p",href:"https://letsencrypt.org/"},"let's encrypt"),"\ub97c \uc0ac\uc6a9\ud558\uae30\uc5d0 \uc778\uc99d\uc11c \ub9cc\ub8cc\uc2dc \ubb38\uc81c\uac00 \ub420\uac70\ub77c \uc0dd\uac01\ud588\uc9c0\ub9cc \uc774\uac83\ub3c4 \uc790\ub3d9\uc73c\ub85c \uac31\uc2e0\uc744 \ud574\uc8fc\ub294 \uad00\ub9ac app.\uc744 \uac19\uc774 \ubc30\ud3ec\ud558\uae30 \ub54c\ubb38\uc5d0 \uc778\uc99d\uc11c \uad00\ub9ac\uc5d0 \ub300\ud55c \ubd80\ub2f4\uc744 \ub35c\uc218 \uc788\ub2e4.  "),(0,s.kt)("p",null,"\uae30\ubcf8\uc801\uc73c\ub85c Cert-manager\ub294 ",(0,s.kt)("a",{parentName:"p",href:"https://letsencrypt.org/"},"let's encrypt"),", ",(0,s.kt)("a",{parentName:"p",href:"https://www.vaultproject.io/"},"Vault")," \uac19\uc740 \uac83\uc744\ub4e4 \uc0ac\uc6a9\ud558\uc5ec \uc778\uc99d\uc11c \ubc1c\uae09\uc744 \ud560 \uc218 \uc788\ub2e4. \uc778\uc99d\uc11c \ubc1c\uae09\ud6c4\uc5d0\ub3c4 \ub9cc\ub8cc\uac00 \ub418\uae30 \uc804\uc5d0 \ubc14\ub85c \uac31\uc2e0\uc744 \uc790\ub3d9\uc73c\ub85c \ud55c\ub2e4. "),(0,s.kt)("h3",{id:"\uad6c\uc131"},"\uad6c\uc131"),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"http://docs.cert-manager.io/en/latest/_images/high-level-overview.png",alt:"certmanager"})),(0,s.kt)("h3",{id:"\uc0ac\uc804\uc900\ube44\uc0ac\ud56d"},"\uc0ac\uc804\uc900\ube44\uc0ac\ud56d"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://docs.helm.sh/using_helm/#installing-helm-client"},"helm")),(0,s.kt)("li",{parentName:"ul"},"k8s cluster (1.7+) - CRD \uc0ac\uc6a9\uc774 \uac00\ub2a5\ud574\uc57c\ud568")),(0,s.kt)("h3",{id:"\uc124\uce58"},"\uc124\uce58"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"$ helm install --name cert-manager --version v0.3.1 \\\n    --namespace kube-system stable/cert-manager\n\n$ helm status cert-manager\nLAST DEPLOYED: Fri Jun 15 10:02:45 2018\nNAMESPACE: kube-system\nSTATUS: DEPLOYED\n\nRESOURCES:\n==> v1/Pod(related)\nNAME                                        READY  STATUS   RESTARTS  AGE\ncert-manager-cert-manager-5f76b676b4-5tdh8  1/1    Running  0         2d\n\n==> v1/ServiceAccount\nNAME                       SECRETS  AGE\ncert-manager-cert-manager  1        28d\n\n==> v1beta1/CustomResourceDefinition\nNAME                               AGE\ncertificates.certmanager.k8s.io    28d\nclusterissuers.certmanager.k8s.io  28d\nissuers.certmanager.k8s.io         28d\n\n==> v1beta1/ClusterRole\ncert-manager-cert-manager  28d\n\n==> v1beta1/ClusterRoleBinding\nNAME                       AGE\ncert-manager-cert-manager  28d\n\n==> v1beta1/Deployment\nNAME                       DESIRED  CURRENT  UP-TO-DATE  AVAILABLE  AGE\ncert-manager-cert-manager  1        1        1           1          28d\n\n\nNOTES:\ncert-manager has been deployed successfully!\n\nIn order to begin issuing certificates, you will need to set up a ClusterIssuer\nor Issuer resource (for example, by creating a 'letsencrypt-staging' issuer).\n\nMore information on the different types of issuers and how to configure them\ncan be found in our documentation:\n\nhttps://cert-manager.readthedocs.io/en/latest/reference/issuers.html\n\nFor information on how to configure cert-manager to automatically provision\nCertificates for Ingress resources, take a look at the `ingress-shim`\ndocumentation:\n\nhttps://cert-manager.readthedocs.io/en/latest/reference/ingress-shim.html\n")),(0,s.kt)("h3",{id:"\uc778\uc99d\uc11c-\uc124\uc815-\ubc0f-\ubc30\ud3ec"},"\uc778\uc99d\uc11c \uc124\uc815 \ubc0f \ubc30\ud3ec"),(0,s.kt)("p",null,"\uc778\uc99d\uc11c \ub4f1\ub85d \ubc0f \ub9cc\ub8cc\uc2dc noti\ub97c \ubc1b\uae30 \uc704\ud55c \ubcc0\uc218 \uc124\uc815\uc744 \ud55c\ub2e4."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"$ export EMAIL=zaction@sk.com\n")),(0,s.kt)("p",null,"\uadf8\ub9ac\uace0 issuer manifest\ub97c \ubc30\ud3ec\ud55c\ub2e4.",(0,s.kt)("br",{parentName:"p"}),"\n","(letsencrypt-issuer.yaml)"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\napiVersion: certmanager.k8s.io/v1alpha1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-staging\nspec:\n  acme:\n    server: https://acme-staging-v02.api.letsencrypt.org/directory\n    email: ''\n    privateKeySecretRef:\n      name: letsencrypt-staging\n    http01: {}\n---\napiVersion: certmanager.k8s.io/v1alpha1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: ''\n    privateKeySecretRef:\n      name: letsencrypt-prod\n    http01: {}\n")),(0,s.kt)("p",null,"\ub450\uac1c\uc758 endpoint\ub97c \uc0dd\uc131\ud55c\ub2e4. (Staging, Prod)"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'$ sed -e "s/email: \'\'/email: $EMAIL/g" letsencrypt-issuer.yaml | \\\n    kubectl apply -f-\nclusterissuer "letsencrypt-staging" created\nclusterissuer "letsencrypt-prod" created\n')),(0,s.kt)("p",null,"Web App\uc744 HTTP Ingress \ud615\ud0dc\ub85c \ubc30\ud3ec\ud55c\ub2e4. TLS\ubc1c\uae09\uc804\uc5d0 \ubbf8\ub9ac HTTP(80) Ingress\ub97c \ubc30\ud3ec\ud574\uc57c \ud55c\ub2e4. \uc774\ud6c4 Let's encrypt TLS\ubc30\ud3ec \ud6c4 TLS spec\uc744 \ucd94\uac00\ud558\uace0 \uc7ac\ubc30\ud3ec\ub97c \ud574\uc57c\ud55c\ub2e4. "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: auth-ingress\nspec:\n  rules:\n  - host: auth.dev.action.cloudz.co.kr\n    http:\n      paths:\n      - backend:\n          serviceName: faas-auth-service\n          servicePort: 8081\n        path: /\n")),(0,s.kt)("h3",{id:"tls-\uc778\uc99d\uc11c-\ubc1c\uae09"},"TLS \uc778\uc99d\uc11c \ubc1c\uae09"),(0,s.kt)("p",null,"\uc778\uc99d\uc11c\ub97c \ubc1c\uae09\ud560\ub54c\ub294 \uc704\uc5d0\uc11c \ub9cc\ub4e0 Ingress\ub85c \uc0dd\uc131\ud558\uace0namespace\ubcc4 \uc0dd\uc131\uc774 \ud544\uc694\ud558\ub2e4."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"apiVersion: certmanager.k8s.io/v1alpha1\nkind: Certificate\nmetadata:\n  name: auth-dev-tls\n  namespace: auth #### namespace\ubcc4 \uc0dd\uc131\nspec:\n  secretName: auth-dev-tls\n  issuerRef:\n    name: letsencrypt-prod\n    kind: ClusterIssuer\n  commonName: auth.dev.action.cloudz.co.kr\n  dnsNames:\n  - auth.dev.action.cloudz.co.kr\n  acme:\n    config:\n    - http01:\n        ingress: auth-ingress ### \uae30\uc874\uc5d0 \ub9cc\ub4e0 HTTP ingress \uba85\n      domains:\n      - auth.dev.action.cloudz.co.kr\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'$ kubectl apply -f auth-dev-tls.yaml\ncertificate "auth-dev-tls" created\n')),(0,s.kt)("p",null,"\uc774\ud6c4 TLS \uc0dd\uc131 \uc0c1\ud0dc\ub97c \ud655\uc778\ud55c\ub2e4. \uc774\x10\ub54c Message\uc5d0\uc11c ",(0,s.kt)("inlineCode",{parentName:"p"},"Normal   CeritifcateIssued     Certificated issued successfully")," \ubb38\uad6c\uac00 \ud655\uc778\ub418\uba74 \uc778\uc99d\uc11c \ubc1c\uae09\uc774 \uc815\uc0c1\uc801\uc73c\ub85c \ub418\uc5c8\ub2e4\uace0 \ubcfc \uc218 \uc788\ub2e4.",(0,s.kt)("br",{parentName:"p"}),"\n","\uc774\ub54c \ubc1c\uae09\ub418\ub294 \uc2dc\uac04\uc774 \ub124\ud2b8\uc6cc\ud06c \ud658\uacbd\uc5d0 \ub530\ub77c 1~5\ubd84\uc815\ub3c4 \uc18c\uc694\ub420\ub54c\ub85c \uc788\ub294\uac83\uc73c\ub85c \ubcf4\uc778\ub2e4. "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'$ kubectl describe -f auth-dev-tls.yaml\n...\nType     Reason                Message\n----     ------                -------\nWarning  ErrorCheckCertificate Error checking existing TLS certificate: secret "auth-dev-tls" not found\nNormal   PrepareCertificate    Preparing certificate with issuer\nNormal   PresentChallenge      Presenting http-01 challenge for domain foo.kubernetes.tips\nNormal   SelfCheck             Performing self-check for domain auth.dev.action.cloudz.co.kr\nNormal   ObtainAuthorization   Obtained authorization for domain auth.dev.action.cloudz.co.kr\nNormal   IssueCertificate      Issuing certificate...\nNormal   CeritifcateIssued     Certificated issued successfully\n')),(0,s.kt)("p",null,"secret\uc774 \uc0dd\uc131\ub41c\uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4. "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"$ kubectl get secret | grep tls\nauth-dev-tls                 kubernetes.io/tls                     2         3h\n")),(0,s.kt)("p",null,"\uc774\ud6c4 \uc704\uc5d0\uc11c \ub9cc\ub4e0 Ingress\uc5d0 TLS\ub97c \uc801\uc6a9\ud55c\ub2e4."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: auth-ingress\n  annotations:\n      ingress.bluemix.net/hsts: enabled=true maxAge=<31536000> includeSubdomains=true\n      ingress.bluemix.net/redirect-to-https: "True"\nspec:\n  rules:\n  - host: auth.dev.action.cloudz.co.kr\n    http:\n      paths:\n      - backend:\n          serviceName: faas-auth-service\n          servicePort: 8081\n        path: /\n  tls:\n  - hosts:\n    - auth.dev.action.cloudz.co.kr\n    secretName: auth-dev-tls\n')),(0,s.kt)("p",null,"\uc704 \uc124\uc815\uc744 \uc801\uc6a9\ud558\uace0 \uc0c1\ud0dc\ub97c \ud655\uc778\ud55c\ub2e4."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"$ kubectl apply -f auth-tls-ingress.yaml\n\n$ kubectl get ing\nNAME           HOSTS                          ADDRESS         PORTS     AGE\nauth-ingress   auth.dev.action.cloudz.co.kr   10.1.1.182   80, 443   14h\n")),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"cert-tls",src:n(13468).Z,width:"1174",height:"1022"})),(0,s.kt)("h2",{id:"\uc815\ub9ac"},"\uc815\ub9ac"),(0,s.kt)("p",null,"\uc124\uacc4\uc758 \uc2e4\uc218\ub85c \uc2dc\uc791\ub418\uc5c8\uc9c0\ub9cc \uc815\ub9ac\ud558\ub2e4\ubcf4\ub2c8 \uc778\uc99d\uc11c \uac31\uc2e0\uc774 \uc790\ub3d9\uc744 \ub41c\ub2e4\ub294 \uc810\uacfc \ub610\ud55c Kubernetes\ud658\uacbd\uc5d0\uc11c TLS\uad00\ub9ac\uac00 \uac04\ud3b8\ud558\ub2e4\ub294\uac83\uc744 \uc54c\uac8c \ub418\uc5c8\ub2e4. \uc778\uc99d\uc11c \ube44\uc6a9\uc744 \uc544\ub080\uac83\ub3c4 \ud558\ub098\uc758 \uc131\uacfc\uc774\uae30\ub3c4 \ud558\ub2e4. \uc778\uc99d\uc11c\ub294 \uc368\uc57c\ud558\uaca0\uace0 \uc815\ub9d0 \ub9ce\uc740 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\ub4e4\uc744 \uc0dd\uc131/\uc0ad\uc81c\ub97c \uc0c1\uc2dc \ud574\uc57c\ud558\ub294 \ud658\uacbd\uc774\ub77c\uba74 \ud55c\ubc88 \uc801\uc6a9\ud574\ubcfc\ub9cc\ud55c \uac00\uce58\uac00 \uc788\ub294\uac83 \uac19\ub2e4."))}d.isMDXComponent=!0},13468:function(e,t,n){t.Z=n.p+"assets/images/cert-tls-44f1bafbb8d04958c83803b445548083.png"}}]);