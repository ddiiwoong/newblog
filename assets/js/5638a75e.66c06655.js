"use strict";(self.webpackChunkddii=self.webpackChunkddii||[]).push([[9942],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return d}});var a=t(67294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},f=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),f=u(t),d=l,m=f["".concat(s,".").concat(d)]||f[d]||c[d]||r;return t?a.createElement(m,i(i({ref:n},p),{},{components:t})):a.createElement(m,i({ref:n},p))}));function d(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=t.length,i=new Array(r);i[0]=f;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var u=2;u<r;u++)i[u]=t[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}f.displayName="MDXCreateElement"},61874:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return c}});var a=t(87462),l=t(63366),r=(t(67294),t(3905)),i=["components"],o={layout:"single",title:"Multus on Kind cluster",comments:!0,classes:"wide",description:"Multus\ub97c Kind cluster\uc5d0 \uc124\uce58\ud558\ub294 \ubc29\ubc95",authors:"jinwoong",toc:!0,toc_label:"Table of Contents",slug:"kubernetes/multus-on-kind/",date:new Date("2024-09-21T00:00:00.000Z"),categories:["Kubernetes"],tags:["Kubernetes","multus","cni","kind","multiple network","macvlan","koko","kindnet"]},s=void 0,u={permalink:"/kubernetes/multus-on-kind/",editUrl:"https://github.com/ddiiwoong/newblog/tree/main/blog/2024-09-21-multus-on-kind.md",source:"@site/blog/2024-09-21-multus-on-kind.md",title:"Multus on Kind cluster",description:"Multus\ub97c Kind cluster\uc5d0 \uc124\uce58\ud558\ub294 \ubc29\ubc95",date:"2024-09-21T00:00:00.000Z",formattedDate:"September 21, 2024",tags:[{label:"Kubernetes",permalink:"/tags/kubernetes"},{label:"multus",permalink:"/tags/multus"},{label:"cni",permalink:"/tags/cni"},{label:"kind",permalink:"/tags/kind"},{label:"multiple network",permalink:"/tags/multiple-network"},{label:"macvlan",permalink:"/tags/macvlan"},{label:"koko",permalink:"/tags/koko"},{label:"kindnet",permalink:"/tags/kindnet"}],readingTime:24.71,truncated:!0,authors:[{name:"Jinwoong Kim",title:"Technologist and Cloud Consultant",url:"https://www.linkedin.com/in/ddiiwoong/",imageURL:"https://s.gravatar.com/avatar/e8bfebcbeacb5b9a0c90614e792febf2?s=80",key:"jinwoong"}],frontMatter:{layout:"single",title:"Multus on Kind cluster",comments:!0,classes:"wide",description:"Multus\ub97c Kind cluster\uc5d0 \uc124\uce58\ud558\ub294 \ubc29\ubc95",authors:"jinwoong",toc:!0,toc_label:"Table of Contents",slug:"kubernetes/multus-on-kind/",date:"2024-09-21T00:00:00.000Z",categories:["Kubernetes"],tags:["Kubernetes","multus","cni","kind","multiple network","macvlan","koko","kindnet"]},nextItem:{title:"ExternalDNS",permalink:"/kubernetes/externaldns/"}},p={authorsImageUrls:[void 0]},c=[{value:"Requirements",id:"requirements",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Kind Cluster \uc0dd\uc131",id:"kind-cluster-\uc0dd\uc131",level:2},{value:"Multus \uc124\uce58",id:"multus-\uc124\uce58",level:2},{value:"<code>koko</code>\ub97c \uc0ac\uc6a9\ud55c \ub178\ub4dc\uac04 \ud1b5\uc2e0 \uc124\uc815",id:"koko\ub97c-\uc0ac\uc6a9\ud55c-\ub178\ub4dc\uac04-\ud1b5\uc2e0-\uc124\uc815",level:2},{value:"koko \uc124\uce58",id:"koko-\uc124\uce58",level:3},{value:"CNI \ub808\ud37c\ub7f0\uc2a4 \ud50c\ub7ec\uadf8\uc778 \uc124\uce58",id:"cni-\ub808\ud37c\ub7f0\uc2a4-\ud50c\ub7ec\uadf8\uc778-\uc124\uce58",level:2},{value:"macvlan\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub450 \uac1c\uc758 \ucee8\ud14c\uc774\ub108 \uc0dd\uc131",id:"macvlan\uc744-\uc0ac\uc6a9\ud558\uc5ec-\ub450-\uac1c\uc758-\ucee8\ud14c\uc774\ub108-\uc0dd\uc131",level:2},{value:"macvlan",id:"macvlan",level:3},{value:"NetworkAttachmentDefinition",id:"networkattachmentdefinition",level:3},{value:"\uba40\ud2f0 \ub124\ud2b8\uc6cc\ud06c \ud30c\ub4dc \uc0dd\uc131",id:"\uba40\ud2f0-\ub124\ud2b8\uc6cc\ud06c-\ud30c\ub4dc-\uc0dd\uc131",level:3},{value:"\ud30c\ub4dc\uac04 \uc2e0\uaddc \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4 \ud1b5\uc2e0 \ud655\uc778",id:"\ud30c\ub4dc\uac04-\uc2e0\uaddc-\ub124\ud2b8\uc6cc\ud06c-\uc778\ud130\ud398\uc774\uc2a4-\ud1b5\uc2e0-\ud655\uc778",level:2},{value:"\uc815\ub9ac",id:"\uc815\ub9ac",level:2}],f={toc:c};function d(e){var n=e.components,o=(0,l.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},f,o,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"\uc774\uc804 \uc9c1\uc7a5\uc5d0\uc11c \ud504\ub85c\uc81d\ud2b8 \uc911\uc5d0 ",(0,r.kt)("inlineCode",{parentName:"p"},"Multus"),"\ub97c \uc0ac\uc6a9\ud558\uc5ec 5G\ud658\uacbd\uc5d0\uc11c \uba40\ud2f0 \ub124\ud2b8\uc6cc\ud06c CNI\ub97c \uc0ac\uc6a9\ud574\uc11c \ud328\ud0b7\uc744 \ubbf8\ub7ec\ub9c1\ud558\uace0 \ud574\ub2f9 \ud328\ud0b7\uc744 \ubd84\uc11d\ud558\ub294 \ud504\ub85c\uc81d\ud2b8\ub97c \uc9c4\ud589\ud588\uc5c8\ub294\ub370, \ub2f9\uc2dc\uc5d0 \uc5ec\ub7ec \uc0ac\uc815\uc73c\ub85c \uc544\uc27d\uac8c \ub41c \ud504\ub85c\uc81d\ud2b8\ub3c4 \uc874\uc7ac\ud558\uace0 \ud574\uc11c \uc774\ubc88 \uae30\ud68c\uc5d0 \uc2dc\ub9ac\uc988\ub85c \uc815\ub9ac \ud574\ubcf4\ub824\uace0 \ud55c\ub2e4. \uc774\ubc88 \ud3ec\uc2a4\ud2b8\uc5d0\uc11c\ub294 ",(0,r.kt)("inlineCode",{parentName:"p"},"Kind")," cluster\uc5d0 ",(0,r.kt)("inlineCode",{parentName:"p"},"Multus"),"\ub97c \uad6c\uc131\ud558\uace0 \ub2e8\uc77c \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \ub178\ub4dc\ub07c\ub9ac \ud1b5\uc2e0\ud560 \uc218 \uc788\ub3c4\ub85d ",(0,r.kt)("inlineCode",{parentName:"p"},"koko"),"\ub97c \uc0ac\uc6a9\ud574\uc11c \ub178\ub4dc\uac04 \uba40\ud2f0 \ub124\ud2b8\uc6cc\ud06c \ud658\uacbd\uc744 \uad6c\uc131\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud574\uc11c \uc815\ub9ac\ud574\ubcf4\ub824\uace0 \ud55c\ub2e4."),(0,r.kt)("h2",{id:"requirements"},"Requirements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://kind.sigs.k8s.io/"},"Kind"),": Kind(Kubernetes IN Docker)\ub294 Docker \ucee8\ud14c\uc774\ub108\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub85c\uceec Kubernetes \ud074\ub7ec\uc2a4\ud130\ub97c \uc2e4\ud589\ud560 \uc218 \uc788\uac8c \ud574\uc8fc\ub294 \ub3c4\uad6c\ub2e4. \uc8fc\ub85c \ud14c\uc2a4\ud2b8 \ubc0f \uac1c\ubc1c \ubaa9\uc801\uc73c\ub85c \uc0ac\uc6a9\ub418\uba70, \ube60\ub974\uace0 \uc27d\uac8c Kubernetes \ud658\uacbd\uc744 \uad6c\ucd95\ud560 \uc218 \uc788\ub2e4. "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/k8snetworkplumbingwg/multus-cni"},"Multus"),": Multus\ub294 Kubernetes\uc5d0\uc11c \uc5ec\ub7ec \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc9c0\uc6d0\ud558\uae30 \uc704\ud55c CNI \ud50c\ub7ec\uadf8\uc778\uc774\ub2e4. Multus\ub97c \ud1b5\ud574 \uac01 Pod\uac00 \uc5ec\ub7ec \ub124\ud2b8\uc6cc\ud06c\uc5d0 \uc5f0\uacb0\ub420 \uc218 \uc788\uc73c\uba70, \ub2e4\uc591\ud55c \ub124\ud2b8\uc6cc\ud06c \uc694\uad6c \uc0ac\ud56d\uc744 \ucda9\uc871\ud560 \uc218 \uc788\ub2e4. \ud2b9\ud788 5G \uc6cc\ud06c\ub85c\ub4dc\uc5d0\uc11c SR-IOV\uc640 \ud568\uaed8 \uc0ac\uc6a9\ub420 \ub54c, Multus\ub294 \uae30\ubcf8 \ub124\ud2b8\uc6cc\ud06c \uc678\uc5d0\ub3c4 \uace0\uc131\ub2a5 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc81c\uacf5\ud560 \uc218 \uc788\ub2e4.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/k8snetworkplumbingwg/sriov-network-device-plugin"},"SR-IOV"),": SR-IOV(Single Root I/O Virtualization)\ub294 \ud558\ub098\uc758 \ubb3c\ub9ac\uc801 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc5ec\ub7ec \uac00\uc0c1 \ud568\uc218(VF)\ub85c \ub098\ub204\uc5b4 \uac01 Pod\uc5d0 \uc9c1\uc811 \ud560\ub2f9\ud560 \uc218 \uc788\uac8c \ud574\uc8fc\ub294 \uae30\uc220\uc774\ub2e4. \uc774\ub97c \ud1b5\ud574 \ub124\ud2b8\uc6cc\ud06c \uc131\ub2a5\uc744 \ud06c\uac8c \ud5a5\uc0c1\uc2dc\ud0ac \uc218 \uc788\uc73c\uba70, \ud2b9\ud788 \uace0\uc131\ub2a5 \ub124\ud2b8\uc6cc\ud0b9\uc774 \ud544\uc694\ud55c 5G \ubc0f NFV(Network Function Virtualization) \ud658\uacbd\uc5d0\uc11c \uc911\uc694\ud558\uac8c \uc0ac\uc6a9\ub418\ub294 \uae30\uc220\uc774\ub2e4."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/redhat-nfvpe/koko"},"Koko"),": Koko\ub294 \ucee8\ud14c\uc774\ub108 \uac04 \ub124\ud2b8\uc6cc\ud06c \uc5f0\uacb0\uc744 \uc704\ud55c \ub3c4\uad6c\ub85c, \ud2b9\ud788 \uc5ec\ub7ec \ub124\ud2b8\uc6cc\ud06c \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uac04\uc758 \uac00\uc0c1 \uc774\ub354\ub137 \ud398\uc5b4\ub97c \uc0dd\uc131\ud558\ub294 \ub370 \uc0ac\uc6a9\ub41c\ub2e4. kind cluster\uc5d0\uc11c \ucee8\ud14c\uc774\ub108\ub85c \uad6c\uc131\ub41c \ub178\ub4dc\uac04 \ud1b5\uc2e0\uc744 \uc704\ud574\uc11c \uc0ac\uc6a9\ub41c\ub2e4."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/containernetworking/plugins/tree/main/plugins/main/macvlan"},"Macvlan"),": Macvlan\uc740 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub97c \uac00\uc0c1\ud654\ud558\uc5ec \uc5ec\ub7ec \uac1c\uc758 \uac00\uc0c1 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\ub294 \uae30\uc220\uc774\ub2e4. \uc774\ub97c \ud1b5\ud574 \uac01 \ucee8\ud14c\uc774\ub108\uac00 \uace0\uc720\ud55c MAC \uc8fc\uc18c\ub97c \uac00\uc9c0\uba70, \ubb3c\ub9ac \ub124\ud2b8\uc6cc\ud06c\uc640 \uc9c1\uc811 \ud1b5\uc2e0\ud560 \uc218 \uc788\ub2e4.")),(0,r.kt)("h2",{id:"architecture"},"Architecture"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"koko",src:t(298).Z,width:"1281",height:"861"})),(0,r.kt)("p",null,"\uc704 \uadf8\ub9bc\uc740 \uad6c\uc131\ud558\ub824\uace0 \ud558\ub294 Kind \ud074\ub7ec\uc2a4\ud130\uc640 \ub124\ud2b8\uc6cc\ud06c \uad6c\uc131\uc744 \ubcf4\uc5ec\uc900\ub2e4. Multus\ub97c \uc0ac\uc6a9\ud558\uba74 Pod\uac00 \uc5ec\ub7ec \ub124\ud2b8\uc6cc\ud06c\uc5d0 \ub3d9\uc2dc\uc5d0 \uc5f0\uacb0\ub420 \uc218 \uc788\uc5b4 \ubcf5\uc7a1\ud55c \ub124\ud2b8\uc6cc\ud06c \ud1a0\ud3f4\ub85c\uc9c0\ub97c \uc9c0\uc6d0\ud560 \uc218 \uc788\ub2e4."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Kind \ud074\ub7ec\uc2a4\ud130"),": \uae30\ubcf8\uc801\uc73c\ub85c Docker \ucee8\ud14c\uc774\ub108\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc\ub97c \uc0dd\uc131\ud55c\ub2e4."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Control Plane"),": \ud074\ub7ec\uc2a4\ud130\uc758 \uc81c\uc5b4 \uc601\uc5ed\uc744 \ub2f4\ub2f9\ud558\uba70, ",(0,r.kt)("inlineCode",{parentName:"li"},"eth0")," \uc778\ud130\ud398\uc774\uc2a4\ub97c \ud1b5\ud574 Docker Bridge\uc640 \uc5f0\uacb0\ub41c\ub2e4."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Worker Node 1 & 2"),": \uac01\uac01\uc758 \uc6cc\ucee4 \ub178\ub4dc\ub294 Pod \ud615\ud0dc\ub85c \uc2e4\ud589\ub418\uba70, ",(0,r.kt)("inlineCode",{parentName:"li"},"eth0")," \uc778\ud130\ud398\uc774\uc2a4\ub97c \ud1b5\ud574 Docker Bridge\uc640 \uc5f0\uacb0\ub41c\ub2e4."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\ub124\ud2b8\uc6cc\ud06c \uad6c\uc131"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Primary Interface (eth0)"),": \uac01 \ub178\ub4dc\uc758 \uae30\ubcf8 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub85c, Kindnet CNI \ud50c\ub7ec\uadf8\uc778\uc744 \ud1b5\ud574 \uc5f0\uacb0\ub41c\ub2e4."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Additional Interface (eth1)"),": Multus CNI \ud50c\ub7ec\uadf8\uc778\uc744 \uc0ac\uc6a9\ud558\uc5ec \ucd94\uac00 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc81c\uacf5\ud55c\ub2e4. \uc5ec\uae30\uc11c\ub294 ",(0,r.kt)("inlineCode",{parentName:"li"},"macvlan")," \ud50c\ub7ec\uadf8\uc778\uc744 \uc0ac\uc6a9\ud558\uc5ec Pod\uc5d0 \ucd94\uac00 \ub124\ud2b8\uc6cc\ud06c\ub97c \uc81c\uacf5\ud55c\ub2e4."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Multus CNI"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Multus\ub294 \uc5ec\ub7ec CNI \ud50c\ub7ec\uadf8\uc778\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uac8c \ud574\uc8fc\ub294 \uba40\ud2f0\ud50c\ub809\uc11c \uc5ed\ud560\uc744 \ud55c\ub2e4. \uc704 \uadf8\ub9bc\uc5d0\uc11c \ucc98\ub7fc Kindnet\uacfc Macvlan\uc744 \ud568\uaed8 \uc0ac\uc6a9\ud55c\ub2e4."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Docker \ube0c\ub9ac\uc9c0"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\ucee8\ud14c\uc774\ub108\ub85c \uc0dd\uc131\ub41c \uac01 \ub178\ub4dc\uc758 ",(0,r.kt)("inlineCode",{parentName:"li"},"eth0")," \uc778\ud130\ud398\uc774\uc2a4\ub294 Docker \ube0c\ub9ac\uc9c0\uc640 \uc5f0\uacb0\ub418\uc5b4 \uc788\uc73c\uba70, ",(0,r.kt)("inlineCode",{parentName:"li"},"veth")," \ud398\uc5b4\ub97c \ud1b5\ud574 \ud1b5\uc2e0\ud55c\ub2e4."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Koko"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\ucee8\ud14c\uc774\ub108 \uac04 Point-to-Point \uc5f0\uacb0\uc744 \uad00\ub9ac\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \ub3c4\uad6c\uc774\ub2e4. \uadf8\ub9bc\uc5d0\uc11c \ub450 \uc6cc\ucee4 \ub178\ub4dc \uac04\uc758 \uc9c1\uc811\uc801\uc778 \uc5f0\uacb0\uc744 \uc124\uc815\ud558\ub294 \uc5ed\ud560\uc744 \ud55c\ub2e4."),(0,r.kt)("li",{parentName:"ul"},"Koko\ub294 \uac00\uc0c1 \uc774\ub354\ub137 \ud398\uc5b4\ub97c \uc0dd\uc131\ud558\uc5ec \uc11c\ub85c \ub2e4\ub978 \ub124\ud2b8\uc6cc\ud06c \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uac04\uc758 \uc9c1\uc811 \uc5f0\uacb0\uc744 \uac00\ub2a5\ud558\uac8c \ud55c\ub2e4. \uc774\ub97c \ud1b5\ud574 Kind \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc758 \uc6cc\ucee4 \ub178\ub4dc \uac04\uc5d0 \ucd94\uac00\uc801\uc778 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4(eth1)\ub97c \uc0dd\uc131\ud558\uace0 \uc5f0\uacb0\ud560 \uc218 \uc788\ub2e4."),(0,r.kt)("li",{parentName:"ul"},"Koko\ub97c \uc0ac\uc6a9\ud558\uba74 \ubcf5\uc7a1\ud55c \ub124\ud2b8\uc6cc\ud06c \ud1a0\ud3f4\ub85c\uc9c0\ub97c \uc27d\uac8c \uad6c\uc131\ud560 \uc218 \uc788\uc73c\uba70, \ud2b9\ud788 \uba40\ud2f0 \ub124\ud2b8\uc6cc\ud06c \ud658\uacbd\uc5d0\uc11c \uc720\uc6a9\ud558\ub2e4.")))),(0,r.kt)("h2",{id:"kind-cluster-\uc0dd\uc131"},"Kind Cluster \uc0dd\uc131"),(0,r.kt)("p",null,"\uc774\ubc88 \uad6c\uc131\uc740 Intel \uae30\ubc18 Ubuntu 22.04 \ud658\uacbd\uc5d0\uc11c \uc9c4\ud589\ub418\uc5c8\ub2e4."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"config-3node.yml")," \ud30c\uc77c\uc744 \uc900\ube44\ud55c\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c ",(0,r.kt)("inlineCode",{parentName:"p"},"kindnet")," CNI \ud50c\ub7ec\uadf8\uc778\uc744 \uc0ac\uc6a9\ud558\uac8c \ub420 \uac83\uc774\ub2e4. \uc8fc\uc11d\ucc98\ub9ac\ub41c \uad6c\ubb38\uc740 \ucee4\uc2a4\ud140 CNI \ud50c\ub7ec\uadf8\uc778\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0\uc5d0 \uc0ac\uc6a9\ub41c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"kind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nname: multus-cluster\nnodes:\n    - role: control-plane\n    - role: worker\n    - role: worker\n# Note: uncomment if you install cni plugin by yourself\n#networking:\n#  disableDefaultCNI: true\n")),(0,r.kt)("p",null,"\uc0dd\uc131\ud55c yml \ud30c\uc77c\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud55c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'$ kind create cluster --config config-3node.yml\nCreating cluster "multus-cluster" ...\n \u2713 Ensuring node image (kindest/node:v1.31.0) \ud83d\uddbc\n \u2713 Preparing nodes \ud83d\udce6 \ud83d\udce6 \ud83d\udce6  \n \u2713 Writing configuration \ud83d\udcdc \n \u2713 Starting control-plane \ud83d\udd79\ufe0f \n \u2713 Installing CNI \ud83d\udd0c \n \u2713 Installing StorageClass \ud83d\udcbe \n \u2713 Joining worker nodes \ud83d\ude9c \nSet kubectl context to "kind-multus-cluster"\nYou can now use your cluster with:\n\nkubectl cluster-info --context kind-multus-cluster\n\nNot sure what to do next? \ud83d\ude05  Check out https://kind.sigs.k8s.io/docs/user/quick-start/\n\n')),(0,r.kt)("p",null,"\ud074\ub7ec\uc2a4\ud130 \uc815\ubcf4\ub97c \ud655\uc778\ud55c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl cluster-info --context kind-multus-cluster\nKubernetes control plane is running at https://127.0.0.1:32935\nCoreDNS is running at https://127.0.0.1:32935/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy\n")),(0,r.kt)("p",null,"kubeconfig\ub97c export \ud55c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'$ kind export kubeconfig --name multus-cluster\nSet kubectl context to "kind-multus-cluster"\n')),(0,r.kt)("p",null,"\ud074\ub7ec\uc2a4\ud130\uac00 \uc131\uacf5\uc801\uc73c\ub85c \uc0dd\uc131\ub418\uc5c8\ub294\uc9c0 kubectl\uacfc docker \uba85\ub839\uc5b4\ub85c \ud655\uc778\ud560 \ud558\uba74, \uc6cc\ucee4 \ub178\ub4dc \uc774\ub984\uacfc docker \ucee8\ud14c\uc774\ub108 \uc774\ub984\uc774 \uac19\uc740 \uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'$ kubectl get nodes \nNAME                           STATUS   ROLES           AGE     VERSION\nmultus-cluster-control-plane   Ready    control-plane   7m11s   v1.31.0\nmultus-cluster-worker          Ready    <none>          6m59s   v1.31.0\nmultus-cluster-worker2         Ready    <none>          6m59s   v1.31.0\n\n$ docker ps\nCONTAINER ID   IMAGE                  COMMAND                  CREATED         STATUS         PORTS                       NAMES\n6e4420eeaf93   kindest/node:v1.31.0   "/usr/local/bin/entr\u2026"   9 minutes ago   Up 9 minutes   127.0.0.1:32935->6443/tcp   multus-cluster-control-plane\n923ca6407417   kindest/node:v1.31.0   "/usr/local/bin/entr\u2026"   9 minutes ago   Up 9 minutes                               multus-cluster-worker\nde238256402a   kindest/node:v1.31.0   "/usr/local/bin/entr\u2026"   9 minutes ago   Up 9 minutes                               multus-cluster-worker2\n')),(0,r.kt)("p",null,"\ub178\ub4dc \ucee8\ud14c\uc774\ub108\uc5d0 sh\ub85c \uc811\uc18d\ud574\uc11c ",(0,r.kt)("inlineCode",{parentName:"p"},"ip a")," \uba85\ub839\uc5b4\ub85c \uc778\ud130\ud398\uc774\uc2a4 \uc815\ubcf4\ub97c \ud655\uc778\ud574\ubcf4\uba74, \ub178\ub4dc\uc5d0\ub294 ",(0,r.kt)("inlineCode",{parentName:"p"},"eth0")," \uc778\ud130\ud398\uc774\uc2a4\ub9cc \uc5f0\uacb0\ub418\uc5b4 \uc788\ub294 \uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4. \uc774\ub294 ",(0,r.kt)("inlineCode",{parentName:"p"},"kindnet")," CNI \ud50c\ub7ec\uadf8\uc778\uc774 \uae30\ubcf8\uc801\uc73c\ub85c \uc81c\uacf5\ud558\ub294 \uc778\ud130\ud398\uc774\uc2a4\uc774\ub2e4. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ docker exec -it multus-cluster-worker sh\n# ip a\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host \n       valid_lft forever preferred_lft forever\n23: eth0@if24: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default \n    link/ether 02:42:ac:12:00:03 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n    inet 172.18.0.3/16 brd 172.18.255.255 scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 fc00:f853:ccd:e793::3/64 scope global nodad \n       valid_lft forever preferred_lft forever\n    inet6 fe80::42:acff:fe12:3/64 scope link \n       valid_lft forever preferred_lft forever\n")),(0,r.kt)("h2",{id:"multus-\uc124\uce58"},"Multus \uc124\uce58"),(0,r.kt)("p",null,"Multus\ub294 ",(0,r.kt)("inlineCode",{parentName:"p"},"CRD"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"clusterrole"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"clusterrolebinding"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"serviceaccount"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"configmap"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"daemonset"),"\uc744 \uc124\uce58\ud558\ub294 \ubc29\uc2dd\uc73c\ub85c \uc124\uce58\ud55c\ub2e4. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl apply -f https://raw.githubusercontent.com/k8snetworkplumbingwg/multus-cni/master/deployments/multus-daemonset.yml\ncustomresourcedefinition.apiextensions.k8s.io/network-attachment-definitions.k8s.cni.cncf.io created\nclusterrole.rbac.authorization.k8s.io/multus created\nclusterrolebinding.rbac.authorization.k8s.io/multus created\nserviceaccount/multus created\nconfigmap/multus-cni-config created\ndaemonset.apps/kube-multus-ds created\n")),(0,r.kt)("h2",{id:"koko\ub97c-\uc0ac\uc6a9\ud55c-\ub178\ub4dc\uac04-\ud1b5\uc2e0-\uc124\uc815"},(0,r.kt)("inlineCode",{parentName:"h2"},"koko"),"\ub97c \uc0ac\uc6a9\ud55c \ub178\ub4dc\uac04 \ud1b5\uc2e0 \uc124\uc815"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"koko"),"\ub294 Docker \ucee8\ud14c\uc774\ub108 \ub610\ub294 Linux \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uac04\uc5d0 veth \uc7a5\uce58\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud3ec\uc778\ud2b8 \ud22c \ud3ec\uc778\ud2b8 \uc5f0\uacb0\uc744 \uc124\uc815\ud558\ub294 \ub3c4\uad6c\uc774\ub2e4. koko\ub294 \ud558\ub098\uc758 \ud638\uc2a4\ud2b8\uc5d0\uc11c \ub450 \uac1c\uc758 \ucee8\ud14c\uc774\ub108\uc5d0 \ub300\ud574\uc11c\ub294 veth\ub97c, \ubcc4\ub3c4\uc758 \ud638\uc2a4\ud2b8\uc5d0\uc11c \ub450 \uac1c\uc758 \ucee8\ud14c\uc774\ub108\uc5d0 \ub300\ud574\uc11c\ub294 vxlan\ub85c \uc5f0\uacb0\uc744 \uc9c0\uc6d0\ud55c\ub2e4. "),(0,r.kt)("h3",{id:"koko-\uc124\uce58"},"koko \uc124\uce58"),(0,r.kt)("p",null,"\ud14c\uc2a4\ud2b8\ub97c \uc9c4\ud589\ud560 \ub178\ub4dc\uc5d0\uc11c \ub2e4\uc74c \uba85\ub839\uc5b4\ub97c \uc2e4\ud589\ud558\uc5ec ",(0,r.kt)("inlineCode",{parentName:"p"},"koko"),"\ub97c \uc124\uce58\ud55c\ub2e4. ",(0,r.kt)("inlineCode",{parentName:"p"},"koko"),"\ub97c \uc0ac\uc6a9\ud558\uc5ec \ucee8\ud14c\uc774\ub108 \ud638\uc2a4\ud2b8\uc5d0\uc11c \ucee8\ud14c\uc774\ub108\ub97c \uc5f0\uacb0\ud558\ub294 \ubc29\ubc95\uc740 veth\ub97c \uc0ac\uc6a9\ud55c\ub2e4. ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/redhat-nfvpe/koko/blob/main/docs/Connecting-containers-in-container-host-using-veth.md"},"Connecting containers in container host using veth")," \ubb38\uc11c\ub97c \ucc38\uace0\ud558\uba74 \ub41c\ub2e4. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./koko {-c <linkname> |\n        -d <container>,<linkname>[,<IP addr>/<prefixlen>,...] |\n        -n <netns name>,<linkname>[,<IP addr>/<prefixlen>,...]|\n        -p <pid>,<linkname>[,<IP addr>/<prefixlen>,...]|\n        -c <linkname> }\n       {-d <container>,<linkname>[,<IP addr>/<prefixlen>,...] |\n        -n <netns name>,<linkname>[,<IP addr>/<prefixlen>,...]|\n        -p <pid>,<linkname>[,<IP addr>/<prefixlen>,...]|\n        -c <linkname> }\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ curl -LO https://github.com/redhat-nfvpe/koko/releases/download/v0.83/koko_0.83_linux_amd64\n")),(0,r.kt)("p",null,"\ub2e4\uc6b4\ubc1b\uc740 koko \ud30c\uc77c\uc5d0 \uc2e4\ud589 \uad8c\ud55c\uc744 \ucd94\uac00\ud558\uace0, sudo \uad8c\ud55c\uc73c\ub85c \uac01 \ub178\ub4dc \ucee8\ud14c\uc774\ub108\uc5d0 ",(0,r.kt)("inlineCode",{parentName:"p"},"eth1")," \uc778\ud130\ud398\uc774\uc2a4\ub97c \ucd94\uac00\ud558\ub294 \uba85\ub839\uc5b4\ub97c \uc2e4\ud589\ud55c\ub2e4. \uc544\ub798 \uba85\ub839\uc5b4\ub294 ",(0,r.kt)("inlineCode",{parentName:"p"},"multus-cluster-worker"),"\uc640 ",(0,r.kt)("inlineCode",{parentName:"p"},"multus-cluster-worker2"),"\ub77c\ub294 \ub450 Kind \ub178\ub4dc \uac04\uc5d0 veth \ud398\uc5b4\ub97c \uc0dd\uc131\ud558\uace0, \uac01 \ub178\ub4dc\uc5d0 \uc778\ud130\ud398\uc774\uc2a4\ub97c \ud560\ub2f9\ud558\uac8c \ub41c\ub2e4. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ chmod +x koko_0.83_linux_amd64\n$ sudo ./koko_0.83_linux_amd64 -d multus-cluster-worker,eth1 -d multus-cluster-worker2,eth1\nCreate veth...done\n")),(0,r.kt)("p",null,'"Create veth...done" \uba54\uc2dc\uc9c0\ub294 \uc2e4\uc81c\ub85c \uc0c8 veth\uac00 \uc0dd\uc131\ub418\uc5c8\ub2e4\uae30 \ubcf4\ub2e4\ub294 pair\uac00 \uc0dd\uc131\ub418\uc5b4\uc11c \uae30\uc874 docker bridge\uc5d0 \uc5f0\uacb0\ub41c veth\uc5d0 \uac01 \ub178\ub4dc \ucee8\ud14c\uc774\ub108\uc758 ',(0,r.kt)("inlineCode",{parentName:"p"},"eth1")," \uc778\ud130\ud398\uc774\uc2a4\uac00 \ub9e4\ud551\ub418\uc5b4 \ucd94\uac00\ub41c \uac83\uc774\ub2e4. \uc0c1\uc138 \ucf54\ub4dc\ub294 ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/redhat-nfvpe/koko/blob/bbe26f6c7e0124815573e22a2f28ff70bfd0db61/koko.go#L595"},"koko.go \ud30c\uc77c"),"\uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\ub2e4."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ip a")," \uba85\ub839\uc5b4\ub85c \uc778\ud130\ud398\uc774\uc2a4 \uc815\ubcf4\ub97c \ub2e4\uc2dc \ud655\uc778\ud574\ubcf4\uba74, \uac01 \ub178\ub4dc \ucee8\ud14c\uc774\ub108\uc5d0 \uc0c8\ub85c\uc6b4 ",(0,r.kt)("inlineCode",{parentName:"p"},"eth1")," \uc778\ud130\ud398\uc774\uc2a4\uac00 \ucd94\uac00\ub41c \uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ docker exec -it multus-cluster-worker ip a\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host \n       valid_lft forever preferred_lft forever\n23: eth0@if24: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default \n    link/ether 02:42:ac:12:00:03 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n    inet 172.18.0.3/16 brd 172.18.255.255 scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 fc00:f853:ccd:e793::3/64 scope global nodad \n       valid_lft forever preferred_lft forever\n    inet6 fe80::42:acff:fe12:3/64 scope link \n       valid_lft forever preferred_lft forever\n28: eth1@if27: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default \n    link/ether 3e:da:c1:0e:3a:5d brd ff:ff:ff:ff:ff:ff link-netnsid 1\n    inet6 fe80::3cda:c1ff:fe0e:3a5d/64 scope link \n       valid_lft forever preferred_lft forever\n")),(0,r.kt)("h2",{id:"cni-\ub808\ud37c\ub7f0\uc2a4-\ud50c\ub7ec\uadf8\uc778-\uc124\uce58"},"CNI \ub808\ud37c\ub7f0\uc2a4 \ud50c\ub7ec\uadf8\uc778 \uc124\uce58"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/containernetworking/plugins"},"CNI \ub808\ud37c\ub7f0\uc2a4 \ud50c\ub7ec\uadf8\uc778"),"\uc740 \ucee8\ud14c\uc774\ub108 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4(Container Network Interface)\uc758 \ud45c\uc900 \uad6c\ud604\uccb4\uc774\ub2e4. \uc774 \ud50c\ub7ec\uadf8\uc778\ub4e4\uc740 Kubernetes\uc640 \uac19\uc740 \ucee8\ud14c\uc774\ub108 \uc624\ucf00\uc2a4\ud2b8\ub808\uc774\uc158 \ud50c\ub7ab\ud3fc\uc5d0\uc11c \ub124\ud2b8\uc6cc\ud06c \uae30\ub2a5\uc744 \uc81c\uacf5\ud558\ub294 \ub370 \uc0ac\uc6a9\ub41c\ub2e4. CNI \ub808\ud37c\ub7f0\uc2a4 \ud50c\ub7ec\uadf8\uc778\uc744 \uc124\uce58\ud568\uc73c\ub85c\uc368 \ud074\ub7ec\uc2a4\ud130 \uad00\ub9ac\uc790\ub294 \ub2e4\uc591\ud55c \ub124\ud2b8\uc6cc\ud0b9 \uc694\uad6c\uc0ac\ud56d\uc744 \ucda9\uc871\uc2dc\ud0a4\uace0, \ucee8\ud14c\uc774\ub108 \uac04 \ud1b5\uc2e0\uc744 \ud6a8\uc728\uc801\uc73c\ub85c \uad00\ub9ac\ud560 \uc218 \uc788\ub2e4. \uc774\ubc88 \ud14c\uc2a4\ud2b8\uc5d0\uc11c\ub294 macvlan \uad6c\uc131\uc744 \uc9c4\ud589\ud558\uc5ec \uc0c8\ub85c\uc6b4 MAC \uc8fc\uc18c\ub97c \uc0dd\uc131\ud558\uace0, \ubaa8\ub4e0 \ud2b8\ub798\ud53d\uc744 \ud574\ub2f9 \ucee8\ud14c\uc774\ub108\ub85c \uc804\ub2ec\ud558\ub294 \ubc29\uc2dd\uc744 \uc0ac\uc6a9\ud55c\ub2e4. \uc124\uce58\ub294 \ub2e4\uc74c yaml\ub97c \uc0ac\uc6a9\ud55c\ub2e4. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'kind: ConfigMap\napiVersion: v1\nmetadata:\n  name: cni-install-sh\n  namespace: kube-system\ndata:\n  install_cni.sh: |\n    cd /tmp\n    wget https://github.com/containernetworking/plugins/releases/download/v1.5.1/cni-plugins-linux-amd64-v1.5.1.tgz\n    cd /host/opt/cni/bin\n    tar xvfzp /tmp/cni-plugins-linux-amd64-v1.5.1.tgz\n    sleep infinite\n---\napiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: install-cni-plugins\n  namespace: kube-system\n  labels:\n    name: cni-plugins\nspec:\n  selector:\n    matchLabels:\n      name: cni-plugins\n  template:\n    metadata:\n      labels:\n        name: cni-plugins\n    spec:\n      hostNetwork: true\n      nodeSelector:\n        kubernetes.io/arch: amd64\n      tolerations:\n      - operator: Exists\n        effect: NoSchedule\n      containers:\n      - name: install-cni-plugins\n        image: alpine\n        command: ["/bin/sh", "/scripts/install_cni.sh"]\n        resources:\n          requests:\n            cpu: "100m"\n            memory: "50Mi"\n          limits:\n            cpu: "100m"\n            memory: "50Mi"\n        securityContext:\n          privileged: true\n        volumeMounts:\n        - name: cni-bin\n          mountPath: /host/opt/cni/bin\n        - name: scripts\n          mountPath: /scripts\n      volumes:\n        - name: cni-bin\n          hostPath:\n            path: /opt/cni/bin\n        - name: scripts\n          configMap:\n            name: cni-install-sh\n            items:\n            - key: install_cni.sh\n              path: install_cni.sh\n')),(0,r.kt)("p",null,"cni \uc778\uc2a4\ud1a8\uc744 \uc124\uce58\ud558\ub294 \uc2a4\ud06c\ub9bd\ud2b8\ub294 cni-install-sh configmap\uc5d0 \uc815\uc758\ub418\uc5b4 \uc788\ub2e4. \ud574\ub2f9 \ud50c\ub7ec\uadf8\uc778\uc740 \ub178\ub4dc\ub9c8\ub2e4 \uc124\uce58\ub418\uc5b4\uc57c \ud558\ubbc0\ub85c daemonset\uc73c\ub85c \uc124\uce58\ud55c\ub2e4. \uae00\uc4f0\ub294 \ub2f9\uc2dc\uc758 \ucd5c\uc2e0 \ubc84\uc804\uc778 1.5.1\uc73c\ub85c \uc124\uce58\ud55c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl create -f cni.yaml \nconfigmap/cni-install-sh created\ndaemonset.apps/install-cni-plugins created\n")),(0,r.kt)("h2",{id:"macvlan\uc744-\uc0ac\uc6a9\ud558\uc5ec-\ub450-\uac1c\uc758-\ucee8\ud14c\uc774\ub108-\uc0dd\uc131"},"macvlan\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub450 \uac1c\uc758 \ucee8\ud14c\uc774\ub108 \uc0dd\uc131"),(0,r.kt)("h3",{id:"macvlan"},"macvlan"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"macvlan"),"\uc740 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub97c \uac00\uc0c1\ud654\ud558\uc5ec \uc5ec\ub7ec \uac1c\uc758 \uac00\uc0c1 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\ub294 \uae30\uc220\uc774\ub2e4. \uc774\ub97c \ud1b5\ud574 \uac01 \ucee8\ud14c\uc774\ub108\uac00 \uace0\uc720\ud55c MAC \uc8fc\uc18c\ub97c \uac00\uc9c0\uba70, \ubb3c\ub9ac \ub124\ud2b8\uc6cc\ud06c\uc640 \uc9c1\uc811 \ud1b5\uc2e0\ud560 \uc218 \uc788\ub2e4. macvlan\uc740 Parent Inteface\ub97c \uc774\uc6a9\ud558\uc5ec \uc5ec\ub7ec\uac1c\uc758 Child Interface\ub97c \uc0dd\uc131\ud55c\ub2e4. Child Interface\ub294 \uac01\uac01 \ubcc4\ub3c4\uc758 MAC Address\uc640 macvlan Mode\ub97c \uac00\uc9c8 \uc218 \uc788\ub2e4. Mode\uc5d0 \ub530\ub77c\uc11c Child Inteface\uac04\uc758 \ud1b5\uc2e0\uc740 \uac00\ub2a5\ud558\uc9c0\ub9cc, Mode\uc5d0 \uad00\uacc4\uc5c6\uc774 Parent Interface\uc640 Child Interface\ub294 \uc11c\ub85c \uc808\ub300\ub85c \ud1b5\uc2e0\uc774 \ubd88\uac00\ub2a5\ud55c\uac8c macvlan\uc758 \ud2b9\uc9d5 \uc911 \ud558\ub098\uc774\ub2e4."),(0,r.kt)("h3",{id:"networkattachmentdefinition"},"NetworkAttachmentDefinition"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"NetworkAttachmentDefinition"),"\uc740 Multus CNI\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub97c \ucd94\uac00\ud560 \ub54c \uc0ac\uc6a9\ub418\ub294 \uc624\ube0c\uc81d\ud2b8\uc774\ub2e4. \uc774\ub97c \ud1b5\ud574 \ucee8\ud14c\uc774\ub108\uc5d0 \ucd94\uac00\uc801\uc778 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub97c \ud560\ub2f9\ud560 \uc218 \uc788\ub2e4. \uc544\ub798\uc640 \uac19\uc774 macvlan\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub97c \ucd94\uac00\ud574\ubcf4\uc790."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: "k8s.cni.cncf.io/v1"\nkind: NetworkAttachmentDefinition\nmetadata:\n  name: macvlan-conf\nspec: \n  config: \'{\n      "cniVersion": "0.3.1",\n      "plugins": [\n        {\n          "type": "macvlan",\n          "capabilities": { "ips": true },\n          "master": "eth1",\n          "mode": "bridge",\n          "ipam": {\n            "type": "static",\n            "routes": [\n              {\n                "dst": "0.0.0.0/0",\n                "gw": "10.1.1.1"\n              }\n            ] \n          }\n        }, {\n          "capabilities": { "mac": true },\n          "type": "tuning"\n        }\n      ]\n    }\'\n')),(0,r.kt)("p",null,"\uc774 ",(0,r.kt)("inlineCode",{parentName:"p"},"NetworkAttachmentDefinition"),"\uc758 \uac01 \ubd80\ubd84\uc744 \ud558\ub098\uc529 \uc0b4\ud3b4\ubcf4\uc790. \uc774 \uad6c\uc131\uc740 ",(0,r.kt)("inlineCode",{parentName:"p"},"macvlan"),"\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc0c8\ub85c\uc6b4 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc0dd\uc131\ud558\uace0, \uc815\uc801 IP \ud560\ub2f9 \ubc0f \ub77c\uc6b0\ud305\uc744 \uc124\uc815\ud55c\ub2e4. \ub610\ud55c ",(0,r.kt)("inlineCode",{parentName:"p"},"tuning")," \ud50c\ub7ec\uadf8\uc778\uc744 \ud1b5\ud574 MAC \uc8fc\uc18c \uc124\uc815 \uae30\ub2a5\uc744 \ucd94\uac00\ub85c \uc81c\uacf5\ud558\uac8c \ub41c\ub2e4. "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'name: "macvlan-conf"\ub85c \uc774 ',(0,r.kt)("inlineCode",{parentName:"li"},"NetworkAttachmentDefinition"),"\uc758 \uc774\ub984\uc744 \uc9c0\uc815\ud55c\ub2e4."),(0,r.kt)("li",{parentName:"ul"},"cniVersion: \uc0ac\uc6a9\ub418\ub294 CNI \uc2a4\ud399 \ubc84\uc804\uc744 \ub098\ud0c0\ub0b8\ub2e4. \uc5ec\uae30\uc11c\ub294 0.3.1 \ubc84\uc804\uc744 \uc0ac\uc6a9\ud55c\ub2e4."),(0,r.kt)("li",{parentName:"ul"},"plugins: CNI \ud50c\ub7ec\uadf8\uc778 \ubaa9\ub85d\uc744 \uc815\uc758\ud55c\ub2e4.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},'type: "macvlan" \ud50c\ub7ec\uadf8\uc778 \uc0ac\uc6a9'),(0,r.kt)("li",{parentName:"ul"},"capabilities: IP \uc8fc\uc18c \ud560\ub2f9 \uae30\ub2a5 \ud65c\uc131\ud654"),(0,r.kt)("li",{parentName:"ul"},'master: "eth1"\uc744 \ub9c8\uc2a4\ud130 \uc778\ud130\ud398\uc774\uc2a4\ub85c \uc0ac\uc6a9'),(0,r.kt)("li",{parentName:"ul"},'mode: "bridge" \ubaa8\ub4dc\ub85c \ub3d9\uc791'),(0,r.kt)("li",{parentName:"ul"},"ipam: IP \uc8fc\uc18c \uad00\ub9ac \uc124\uc815",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},'type: "static"\uc73c\ub85c \uc815\uc801 IP \ud560\ub2f9 \uc0ac\uc6a9'),(0,r.kt)("li",{parentName:"ul"},"routes: \uae30\ubcf8 \ub77c\uc6b0\ud2b8 \uc124\uc815 (\uac8c\uc774\ud2b8\uc6e8\uc774: 10.1.1.1)"))),(0,r.kt)("li",{parentName:"ul"},"capabilities: MAC \uc8fc\uc18c \uc124\uc815 \uae30\ub2a5 \ud65c\uc131\ud654"),(0,r.kt)("li",{parentName:"ul"},'type: "tuning" \ud50c\ub7ec\uadf8\uc778\uc740 MAC \uc8fc\uc18c \uc124\uc815 \uae30\ub2a5\uc744 \ud65c\uc131\ud654\ud558\uae30 \uc704\ud574 \uc0ac\uc6a9')))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"NetworkAttachmentDefinition")," \ub9ac\uc18c\uc2a4\ub97c \uc0dd\uc131\ud55c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl apply -f nad.yaml \nnetworkattachmentdefinition.k8s.cni.cncf.io/macvlan-conf created\n")),(0,r.kt)("p",null,"\ubaa8\ub4e0 \uc900\ube44\uac00 \uc644\ub8cc\ub418\uc5c8\ub2e4. \uc774\uc81c \uba40\ud2f0 \ub124\ud2b8\uc6cc\ud06c \ud30c\ub4dc\ub97c \uc0dd\uc131\ud574\ubcf4\uc790. "),(0,r.kt)("h3",{id:"\uba40\ud2f0-\ub124\ud2b8\uc6cc\ud06c-\ud30c\ub4dc-\uc0dd\uc131"},"\uba40\ud2f0 \ub124\ud2b8\uc6cc\ud06c \ud30c\ub4dc \uc0dd\uc131"),(0,r.kt)("p",null,"\uba40\ud2f0 \ub124\ud2b8\uc6cc\ud06c \ud30c\ub4dc\ub97c \uc0dd\uc131\ud558\uae30 \uc704\ud574\uc11c\ub294 ",(0,r.kt)("inlineCode",{parentName:"p"},"annotations"),"\uc5d0 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub97c \ucd94\uac00\ud574\uc57c \ud55c\ub2e4. \uc774\uc804\uc5d0 \uad6c\uc131\ud588\ub358 macvlan-conf\ub97c \ucd94\uac00\ud558\uace0, \uac01 \ud30c\ub4dc\uc5d0 \ud560\ub2f9\ub420 IP \uc8fc\uc18c\uc640 \uac8c\uc774\ud2b8\uc6e8\uc774\ub97c \uc124\uc815\ud55c\ub2e4. \uadf8\ub9ac\uace0 ",(0,r.kt)("inlineCode",{parentName:"p"},"netshoot")," \uc774\ubbf8\uc9c0\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud30c\ub4dc\ub97c \uc0dd\uc131\ud55c\ub2e4. \ub610\ud55c \ud30c\ub4dc\uc5d0 \ub300\ud55c \ub124\ud2b8\uc6cc\ud06c \uba85\ub839\uc5b4 \uc2e4\ud589\uc744 \uc704\ud574 ",(0,r.kt)("inlineCode",{parentName:"p"},"securityContext"),"\ub97c \ud1b5\ud574 \ud30c\ub4dc\uc5d0 \ub300\ud55c \uad8c\ud55c\uc744 \uc124\uc815\ud558\uace0, \ud30c\ub4dc\uac00 \uc885\ub8cc\ub420 \ub54c \uc790\uc6d0\uc744 \uc815\ub9ac\ud558\ub294 \uc124\uc815\uc744 \ud55c\ub2e4. \uadf8\ub9ac\uace0 \uac01 \ub178\ub4dc\uc5d0 \ub300\ud55c \uc120\ud0dd\uacfc \ud1b5\uc2e0 \ud655\uc778\uc744 \uc704\ud574 ",(0,r.kt)("inlineCode",{parentName:"p"},"nodeSelector")," \uc124\uc815\uc73c\ub85c \uc774\ubbf8 \uad6c\uc131\ud55c \uac01 \ub178\ub4dc \ucee8\ud14c\uc774\ub108\uc5d0 \ud30c\ub4dc\ub97c \ubc30\uce58\ud55c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\nkind: Pod\nmetadata:\n  name: pod1\n  annotations:\n    k8s.v1.cni.cncf.io/networks: \'[\n            { "name": "macvlan-conf",\n              "ips": [ "10.1.1.101/24" ],\n              "gateway": [ "10.1.1.1" ]\n            }]\'\nspec:\n  containers:\n  - name: pod1\n    image: nicolaka/netshoot\n    command: ["tail"]\n    args: ["-f", "/dev/null"]\n    securityContext:\n      privileged: true\n  terminationGracePeriodSeconds: 0\n  nodeSelector:\n    kubernetes.io/hostname: multus-cluster-worker\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: pod2\n  annotations:\n    k8s.v1.cni.cncf.io/networks: \'[\n            { "name": "macvlan-conf",\n              "ips": [ "10.1.1.102/24" ],\n              "gateway": [ "10.1.1.1" ]\n            }]\'\nspec:\n  containers:\n  - name: pod2\n    image: nicolaka/netshoot\n    command: ["tail"]\n    args: ["-f", "/dev/null"]\n    securityContext:\n      privileged: true\n  terminationGracePeriodSeconds: 0\n  nodeSelector:\n    kubernetes.io/hostname: multus-cluster-worker2\n')),(0,r.kt)("p",null,"\ud30c\ub4dc\ub97c \uc0dd\uc131\ud55c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl apply -f pod.yaml                                                                   \npod/pod1 created\npod/pod2 created\n")),(0,r.kt)("h2",{id:"\ud30c\ub4dc\uac04-\uc2e0\uaddc-\ub124\ud2b8\uc6cc\ud06c-\uc778\ud130\ud398\uc774\uc2a4-\ud1b5\uc2e0-\ud655\uc778"},"\ud30c\ub4dc\uac04 \uc2e0\uaddc \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4 \ud1b5\uc2e0 \ud655\uc778"),(0,r.kt)("p",null,"\uba3c\uc800 \ud30c\ub4dc\uc5d0 \ud560\ub2f9\ub41c \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub97c \ud655\uc778\ud55c\ub2e4. \uba3c\uc800 \uc544\ud0a4\ud14d\ucc98 \uad6c\uc131\ub3c4\uc5d0 \ub530\ub77c\uc11c \ud30c\ub4dc\uc5d0 \ud560\ub2f9\ub41c \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub97c \ud655\uc778 \ud560 \uc218 \uc788\ub2e4. eth0\uc740 \ub178\ub4dc\uc758 \uae30\uc874 kindnet \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc774\uace0, net1\uc740 multus\uc5d0 \uc758\ud574 \uc0c8\ub85c \uc0dd\uc131\ub41c macvlan \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc774\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl exec -it pod1 -- ip a\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host proto kernel_lo \n       valid_lft forever preferred_lft forever\n2: eth0@if2: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default \n    link/ether ba:aa:3b:d1:7c:50 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n    inet 10.244.1.2/24 brd 10.244.1.255 scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::b8aa:3bff:fed1:7c50/64 scope link proto kernel_ll \n       valid_lft forever preferred_lft forever\n3: net1@if20: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default \n    link/ether a6:64:d5:ee:c4:91 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n    inet 10.1.1.101/24 brd 10.1.1.255 scope global net1\n       valid_lft forever preferred_lft forever\n    inet6 fe80::a464:d5ff:feee:c491/64 scope link proto kernel_ll \n       valid_lft forever preferred_lft forever\n\n$ kubectl exec -it pod2 -- ip a\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host proto kernel_lo \n       valid_lft forever preferred_lft forever\n2: eth0@if2: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default \n    link/ether fa:82:35:f3:28:62 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n    inet 10.244.2.2/24 brd 10.244.2.255 scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::f882:35ff:fef3:2862/64 scope link proto kernel_ll \n       valid_lft forever preferred_lft forever\n3: net1@if19: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default \n    link/ether 7e:af:c9:aa:18:8b brd ff:ff:ff:ff:ff:ff link-netnsid 0\n    inet 10.1.1.102/24 brd 10.1.1.255 scope global net1\n       valid_lft forever preferred_lft forever\n    inet6 fe80::7caf:c9ff:feaa:188b/64 scope link proto kernel_ll \n       valid_lft forever preferred_lft forever\n")),(0,r.kt)("p",null,"\ub178\ub4dc\uc5d0\uc11c \ud655\uc778\ud574\ubcf4\uba74 \ud30c\ub4dc\uc5d0 \ud560\ub2f9\ub41c ",(0,r.kt)("inlineCode",{parentName:"p"},"veth")," \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uac00 \ucd94\uac00\ub41c \uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker exec -it multus-cluster-worker ip a\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host \n       valid_lft forever preferred_lft forever\n2: veth3775384b@if2: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default \n    link/ether 52:f5:78:4b:a1:0b brd ff:ff:ff:ff:ff:ff link-netns cni-2632d959-3e52-354c-cde2-3b5e27ba6d86\n    inet 10.244.1.1/32 scope global veth3775384b\n       valid_lft forever preferred_lft forever\n    inet6 fe80::50f5:78ff:fe4b:a10b/64 scope link \n       valid_lft forever preferred_lft forever\n23: eth0@if24: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default \n    link/ether 02:42:ac:12:00:03 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n    inet 172.18.0.3/16 brd 172.18.255.255 scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 fc00:f853:ccd:e793::3/64 scope global nodad \n       valid_lft forever preferred_lft forever\n    inet6 fe80::42:acff:fe12:3/64 scope link \n       valid_lft forever preferred_lft forever\n28: eth1@if27: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default \n    link/ether 3e:da:c1:0e:3a:5d brd ff:ff:ff:ff:ff:ff link-netnsid 1\n    inet6 fe80::3cda:c1ff:fe0e:3a5d/64 scope link \n       valid_lft forever preferred_lft forever\n")),(0,r.kt)("p",null,"\uac01 \ud30c\ub4dc\uc5d0\uc11c \uc2e0\uaddc\ub85c \ucd94\uac00\ub41c \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub85c\uc758 \ud1b5\uc2e0\uc744 \ud655\uc778\ud55c\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl exec -it pod1 -- ping 10.1.1.102\nPING 10.1.1.102 (10.1.1.102) 56(84) bytes of data.\n64 bytes from 10.1.1.102: icmp_seq=1 ttl=64 time=0.065 ms\n64 bytes from 10.1.1.102: icmp_seq=2 ttl=64 time=0.034 ms\n64 bytes from 10.1.1.102: icmp_seq=3 ttl=64 time=0.035 ms\n\n$ kubectl exec -it pod2 -- ping 10.1.1.101\nPING 10.1.1.101 (10.1.1.101) 56(84) bytes of data.\n64 bytes from 10.1.1.101: icmp_seq=1 ttl=64 time=0.027 ms\n64 bytes from 10.1.1.101: icmp_seq=2 ttl=64 time=0.032 ms\n64 bytes from 10.1.1.101: icmp_seq=3 ttl=64 time=0.026 ms\n")),(0,r.kt)("p",null,"\uc6d0\ub798 CNI\ub97c \ud1b5\ud574 \ud560\ub2f9\ub41c \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub294 \ud30c\ub4dc\uac04 \ud1b5\uc2e0\ub3c4 \ud655\uc778\ud560 \uc218 \uc788\ub2e4."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl exec -it pod1 -- ping 10.244.2.2\nPING 10.244.2.2 (10.244.2.2) 56(84) bytes of data.\n64 bytes from 10.244.2.2: icmp_seq=1 ttl=62 time=0.136 ms\n64 bytes from 10.244.2.2: icmp_seq=2 ttl=62 time=0.081 ms\n64 bytes from 10.244.2.2: icmp_seq=3 ttl=62 time=0.079 ms\n\n$ kubectl exec -it pod2 -- ping 10.244.2.1                                                    \nPING 10.244.2.1 (10.244.2.1) 56(84) bytes of data.\n64 bytes from 10.244.2.1: icmp_seq=1 ttl=64 time=0.041 ms\n64 bytes from 10.244.2.1: icmp_seq=2 ttl=64 time=0.045 ms\n64 bytes from 10.244.2.1: icmp_seq=3 ttl=64 time=0.031 ms\n")),(0,r.kt)("h2",{id:"\uc815\ub9ac"},"\uc815\ub9ac"),(0,r.kt)("p",null,"\uc774 \ud3ec\uc2a4\ud2b8\uc5d0\uc11c\ub294 Kind \ud074\ub7ec\uc2a4\ud130\uc5d0 Multus\ub97c \uc124\uce58\ud558\uace0 koko\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc \uac04 \uba40\ud2f0 \ub124\ud2b8\uc6cc\ud06c \ud658\uacbd\uc744 \uad6c\uc131\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud574 \uc54c\uc544\ubd24\ub2e4. \uc8fc\uc694 \ub0b4\uc6a9\uc744 \uc694\uc57d\ud558\uba74 \ub2e4\uc74c\uacfc \uac19\ub2e4."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Kind\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud558\ub098\uc758 \ud638\uc2a4\ud2b8\uc5d0\uc11c Kubernetes \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud55c\ub2e4."),(0,r.kt)("li",{parentName:"ol"},"Multus CNI\ub97c \uc124\uce58\ud558\uc5ec \ub2e4\uc911 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4 \uc9c0\uc6d0\uc744 \ucd94\uac00\ud55c\ub2e4."),(0,r.kt)("li",{parentName:"ol"},"koko \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc \uac04 \uc9c1\uc811 \ud1b5\uc2e0\uc744 \uc704\ud55c veth \ud398\uc5b4\ub97c \uc0dd\uc131\ud55c\ub2e4."),(0,r.kt)("li",{parentName:"ol"},"CNI \ub808\ud37c\ub7f0\uc2a4 \ud50c\ub7ec\uadf8\uc778\uc744 \uc124\uce58\ud558\uc5ec macvlan \ub124\ud2b8\uc6cc\ud06c\ub97c \uad6c\uc131\ud55c\ub2e4."),(0,r.kt)("li",{parentName:"ol"},"NetworkAttachmentDefinition\uc744 \uc0dd\uc131\ud558\uc5ec Multus\uc5d0 macvlan \ub124\ud2b8\uc6cc\ud06c\ub97c \uc815\uc758\ud55c\ub2e4."),(0,r.kt)("li",{parentName:"ol"},"\ud14c\uc2a4\ud2b8\uc6a9 \ud30c\ub4dc\ub97c \ubc30\ud3ec\ud558\uc5ec \ucd94\uac00\ub41c \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub97c \ud1b5\ud55c \ud1b5\uc2e0\uc744 \ud655\uc778\ud55c\ub2e4.")),(0,r.kt)("p",null,"\uc774 \uad6c\uc131\uc744 \ud1b5\ud574 \ub2e8\uc77c Kind \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc5d0\uc11c \ub2e4\uc911 \ub124\ud2b8\uc6cc\ud06c \ud658\uacbd\uc744 \uc2dc\ubbac\ub808\uc774\uc158\ud560 \uc218 \uc788\uc5c8\ub2e4. \uc774\ub294 \ubcf5\uc7a1\ud55c \ub124\ud2b8\uc6cc\ud06c \ud1a0\ud3f4\ub85c\uc9c0\uac00 \ud544\uc694\ud55c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uac1c\ubc1c \ubc0f \ud14c\uc2a4\ud2b8\uc5d0 \uc720\uc6a9\ud560 \uc218 \uc788\ub2e4. \ud2b9\ud788 5G \ub124\ud2b8\uc6cc\ud06c\ub098 NFV \ud658\uacbd\uacfc \uac19\uc774 \uace0\uc131\ub2a5 \ub124\ud2b8\uc6cc\ud0b9\uc774 \ud544\uc694\ud55c \uc2dc\ub098\ub9ac\uc624\uc5d0\uc11c \uc774\ub7ec\ud55c \uc124\uc815\uc774 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\ub2e4."),(0,r.kt)("p",null,"\uc774 \uc811\uadfc \ubc29\uc2dd\uc740 \uac1c\ubc1c \ubc0f \ud14c\uc2a4\ud2b8 \ud658\uacbd\uc5d0\uc11c \uc720\uc6a9\ud558\uc9c0\ub9cc, \ud504\ub85c\ub355\uc158 \ud658\uacbd\uc5d0\uc11c\ub294 \ucd94\uac00\uc801\uc778 \uace0\ub824\uc0ac\ud56d\uacfc \ucd5c\uc801\ud654\uac00 \ud544\uc694\ud560 \uc218 \uc788\ub2e4. \ub124\ud2b8\uc6cc\ud06c \ubcf4\uc548, \uc131\ub2a5, \ud655\uc7a5\uc131 \ub4f1\uc758 \uce21\uba74\uc5d0\uc11c \ub354 \uae4a\uc774 \uc788\ub294 \uac80\ud1a0\uac00 \ud544\uc694\ud560 \uac83\uc774\ub2e4."),(0,r.kt)("p",null,"\ucd08\ubc18\uc5d0 \uba40\ud2f0 \ub124\ud2b8\uc6cc\ud06c CNI\ub97c \uc0ac\uc6a9\ud574\uc11c \ud328\ud0b7\uc744 \ubbf8\ub7ec\ub9c1\ud558\uace0 \ud574\ub2f9 \ud328\ud0b7\uc744 \ubd84\uc11d\ud558\ub294 \ud504\ub85c\uc81d\ud2b8\ub97c \uc9c4\ud589\ud588\uc5c8\ub2e4\ub294 \ub0b4\uc6a9\uc744 \uc5b8\uae09\ud588\uc5c8\ub294\ub370, \ub2e4\uc74c \ud3ec\uc2a4\ud305\uc5d0\uc11c\ub294 multus\uc640 \ucee8\ud14c\uc774\ub108 \ubbf8\ub7ec\ub9c1 \ub3c4\uad6c\ub85c \ud328\ud0b7\uc744 \ubbf8\ub7ec\ub9c1\ud558\uace0 pcap exporter\ub97c \uc0ac\uc6a9\ud574\uc11c \ud328\ud0b7\uc758 5-tuple \uc815\ubcf4\ub97c \ubd84\uc11d\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud574\uc11c \uc801\uc5b4\ubcf4\ub824\uace0 \ud55c\ub2e4."))}d.isMDXComponent=!0},298:function(e,n,t){n.Z=t.p+"assets/images/koko-27e3b38a60609fafbf86757382304d85.png"}}]);